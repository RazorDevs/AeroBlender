buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        maven {
            name 'Gradle'
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath group: 'io.github.0ffz', name: 'gpr-for-gradle', version: '1.+', changing: true
    }
}

plugins {
    id 'java'
    id 'org.spongepowered.gradle.vanilla' version '0.2.1-SNAPSHOT'
}

apply plugin: 'io.github.0ffz.github-packages'


archivesBaseName = "${mod_name}-common-${minecraft_version}"


minecraft {
    accessWideners(project.file("src/main/resources/atumblender.accesswidener"))
    version(minecraft_version)
    runs {
        if (project.hasProperty('common_runs_enabled') ? project.findProperty('common_runs_enabled').toBoolean() : true) {
        
            server(project.hasProperty('common_server_run_name') ? project.findProperty('common_server_run_name') : 'vanilla_server') {
                workingDirectory(this.file("run"))
            }
            client(project.hasProperty('common_client_run_name') ? project.findProperty('common_client_run_name') : 'vanilla_client') {
                workingDirectory(this.file("run"))
            }
        }
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'

repositories {
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    maven {
        url = "https://maven.jaackson.me"
    }
    maven {
        url = "https://maven.theillusivec4.top/"
    }
    flatDir {
        dir 'libs'
    }
    maven githubPackage.invoke("The-Aether-Team/The-Aether")
}

dependencies {
    compileOnly group:'org.spongepowered', name: 'mixin', version: '0.8.5'
    compileOnly group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
    compileOnly("com.electronwill.night-config:toml:${nightconfig_version}")
    compileOnly("com.electronwill.night-config:core:${nightconfig_version}")
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    compileOnly "com.aetherteam.aether:aether:1.19.4-1.0.0-beta.4-forge"
    runtimeOnly ("com.aetherteam.aether:aether:1.19.4-1.0.0-beta.4-forge")
    runtimeOnly ("top.theillusivec4.curios:curios-forge:1.19.4-5.1.5.3")
    compileOnly ("top.theillusivec4.curios:curios-forge:1.19.4-5.1.5.3:api")
}

processResources {
    def buildProps = project.properties.clone()

    filesMatching(['pack.mcmeta']) {
        expand buildProps
    }
}