buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        maven {
            name 'Gradle'
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath group: 'io.github.0ffz', name: 'gpr-for-gradle', version: '1.+', changing: true
    }
}

plugins {
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id "com.modrinth.minotaur" version "2.7.+"
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
}

apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'io.github.0ffz.github-packages'


archivesBaseName = "${mod_name}-forge"
def mod_build_version = "${mod_version}.${System.getenv().BUILD_NUMBER}"

minecraft {
    mappings channel: 'official', version: minecraft_version
        // https://github.com/MinecraftForge/MinecraftForge/blob/be1698bb1554f9c8fa2f58e32b9ab70bc4385e60/fmlloader/src/main/java/net/minecraftforge/fml/loading/moddiscovery/ModFile.java#L123
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    project.logger.debug('Forge Access Transformers are enabled for this project.')

    runs {
        client {
            workingDirectory project.file('run')
            args "-mixin.config=${mod_id}.mixins.json"
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Client'
            mods {
                modClientRun {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            args "-mixin.config=${mod_id}.mixins.json"
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Server'
            mods {
                modServerRun {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/'), "-mixin.config=${mod_id}.mixins.json"
            taskName 'Data'
            mods {
                modDataRun {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'

repositories {
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    maven {
        url = "https://maven.jaackson.me"
    }
    maven {
        url = "https://maven.theillusivec4.top/"
    }
    flatDir {
        dir 'libs'
    }
    maven githubPackage.invoke("The-Aether-Team/The-Aether")
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    compileOnly fg.deobf("com.aetherteam.aether:aether:1.19.4-1.0.0-beta.4-forge")
    runtimeOnly fg.deobf("com.aetherteam.aether:aether:1.19.4-1.0.0-beta.4-forge")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.19.4-5.1.5.3")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.19.4-5.1.5.3:api")
}

mixin {
    add sourceSets.main, "${mod_id}.refmap.json"
    config "${mod_id}.mixins.json"
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}


processResources {
    def buildProps = project.properties.clone()

    filesMatching(['pack.mcmeta']) {
        expand buildProps
    }

    filesMatching("${mod_id}.mixins.json") {
        expand "refmap_target": "${mod_id}."
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}



